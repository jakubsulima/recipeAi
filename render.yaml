services:
  # 1. The Frontend Web Service (Public Facing)
  - type: web
    name: frontend
    env: docker
    dockerfilePath: ./frontend/recipeai/Dockerfile
    dockerContext: ./frontend/recipeai
    # Nginx proxy_pass will use this internal URL
    # The backend service name is 'backend' (defined below)
    # and Render exposes it on port 8080.
    envVars:
      - key: NGINX_PROXY_PASS
        value: http://backend:8080

  # 2. The Backend Private Service (Internal)
  - type: pserv # 'pserv' means Private Service
    name: backend
    env: docker
    dockerfilePath: ./backendApi/Dockerfile
    dockerContext: ./backendApi
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: prod
      - key: DATABASE_URL
        fromDatabase:
          name: recipe-db # Matches the database name below
          property: connectionString
      - key: DB_USERNAME
        fromDatabase:
          name: recipe-db
          property: user
      - key: DB_PASSWORD
        fromDatabase:
          name: recipe-db
          property: password
      - key: GEMINI_API_KEY
        sync: false # This is a secret, manage it in the dashboard

  # 3. The PostgreSQL Managed Database
  - type: db
    name: recipe-db
    databaseName: recipeai # The name of the database inside Postgres
    user: recipe_user
    plan: free # Or a paid plan for production
