services:
  # 1. The Frontend Web Service (Public Facing)
  - type: web
    name: frontend
    env: docker
    dockerfilePath: ./frontend/recipeai/Dockerfile
    dockerContext: ./frontend/recipeai
    envVars:
      - key: NGINX_PROXY_PASS
        value: http://backend:8080

  # 2. The PostgreSQL Database Service (Official Image, no build)
  - type: pserv
    name: postgres-db
    env: image
    dockerImage: postgres:15
    disk:
      name: postgres-data
      mountPath: /var/lib/postgresql/data
      sizeGB: 1
    envVars:
      - key: POSTGRES_DB
        value: recipeai
      - key: POSTGRES_USER
        value: recipe_user
      - key: POSTGRES_PASSWORD
        sync: false # Manage this secret in the dashboard

  # 3. The Backend Private Service (Spring Boot API)
  - type: pserv
    name: backend
    env: docker
    dockerfilePath: ./backendApi/Dockerfile
    dockerContext: ./backendApi
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: prod
      - key: SPRING_DATASOURCE_URL
        value: jdbc:postgresql://postgres-db:5432/recipeai
      - key: SPRING_DATASOURCE_USERNAME
        value: recipe_user
      - key: SPRING_DATASOURCE_PASSWORD
        sync: false # secret managed in Render dashboard
      - key: GEMINI_API_KEY
        sync: false # secret managed in Render dashboardage it in the dashboard
