services:
  backend:
    build:
      context: ./backendApi
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - POSTGRES_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "timeout 10s bash -c '</dev/tcp/localhost/8080' || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - recipe-net

  frontend:
    build:
      context: ./frontend/recipeai
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    environment:
      - ENABLE_HTTPS=true
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - recipe-net

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - recipe-net

volumes:
  postgres_data:

networks:
  recipe-net:
    driver: bridge
